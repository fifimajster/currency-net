for i in range(10, 100):
	dissipate_smells(G, iterations=1, change_rate=i**(-1))



G = nx.barabasi_albert_graph(1000, 5)
theoretical avg length: 3.63
test over 100 random pairs of nodes
jumps add on average 0.5 to avg length
so the best possible avg length with jumps is about 4.1
G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 3

	dim 15
	avg length:  35.57   max length:  365
	
	dim 25
	avg length:  17.24   max length:  217

	dim 50
	avg length:  5.91   max length:  41

	dim 100
	avg length:  4.76   max length:  28

->	dim 200
	avg length:  4.37   max length:  18
	
	dim 400
	avg length:  4.14   max length:  16

	dim 800
	avg length:  4.37   max length:  15


G = nx.barabasi_albert_graph(5000, 5)
theoretical avg length: 3.97

	dim 200
	avg length:  7.16   max length:  43
	avg length:  6.51   max length:  49
	avg length:  5.66   max length:  15

	dim 400
	avg length:  6.08   max length:  34
	avg length:  6.83   max length:  69
	avg length:  6.79   max length:  37






G = nx.barabasi_albert_graph(1000, 5)
test over 100 random pairs of nodes
dim 200

->	G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 1
	avg length:  4.41   max length:  16
	avg length:  4.21   max length:  12
	avg length:  4.46   max length:  13

	G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 2
	avg length:  5.82   max length:  35
	avg length:  5.73   max length:  20
	avg length:  6.21   max length:  41

	G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 3
	avg length:  4.87   max length:  27
	avg length:  4.65   max length:  12
	avg length:  4.32   max length:  21

	G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 4
	avg length:  6.29   max length:  35
	avg length:  7.14   max length:  45
	avg length:  6.2   max length:  62

	G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 5
	avg length:  4.58   max length:  17
	avg length:  4.24   max length:  30
	avg length:  4.13   max length:  13







G = nx.barabasi_albert_graph(1000, 10)
for i in range(10, 100):
G.nodes[node]['smell'] = np.random.uniform(-1, 1, dimensions) ** 1
dim 400
for 1000 random pairs

	one jump at once

x		jump 0.12
		avg length:  3.891   max length:  445

x		jump 0.2
		avg length:  4.138   max length:  258

x		jump 0.3
		avg length:  4.656   max length:  25

	two jumps at once

x		jump 0
		got stuck
	
x		jump 0.02
		avg length:  3.36   max length:  204

x		jump 0.04
		avg length:  3.406   max length:  241

x		jump 0.08	
		avg length:  3.193   max length:  38

->		jump 0.12
		avg length:  3.623   max length:  133

		jump 0.16
		avg length:  3.687   max length:  26

x		jump 0.32
		avg length:  5.24   max length:  27

	three jumps at once

x		jump 0.08
		avg length:  3.457   max length:  113

		jump 0.12
		avg length:  3.397   max length:  37

		jump 0.2
		avg length:  4.078   max length:  78

		jump 0.3
		avg length:  4.627   max length:  22





5000 random pairs
jump 0.12

	two jumps
	avg length:  3.3386   max length:  26

	three jumps
	avg length:  3.7232   max length:  194



two jumps at once
jump 0.12
10000 random pairs
avg length:  3.36935   max length:  148


















for 5000 random pairs:
dim 200

	smell_distances = [[np.sum(abs(end_smell-smell)**1), neighbour]
	avg length:  3.9338   max length:  54

	smell_distances = [[np.sum(abs(end_smell-smell)**1.5), neighbour]
	avg length:  3.9652   max length:  63

	smell_distances = [[np.sum(abs(end_smell-smell)**1.5), neighbour]
	avg length:  3.906   max length:  151


dim 50

	**1
	avg length:  9.8232   max length:  327

	**1.5
	avg length:  8.2982   max length:  325

	**2
	avg length:  8.6906   max length:  461


